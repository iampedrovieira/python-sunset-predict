
name: Daily Python Script

on:
  workflow_dispatch:

jobs:
  run-script:
    if: github.actor != 'github-actions'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT_SUNSET }}
          submodules: 'recursive'

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t main-app -f Dockerfile-action .
        
      - name: Run script
        env:
          THIRD_PARTY_API_KEY: ${{ secrets.THIRD_PARTY_API_KEY }}
          THIRD_PARTY_URL: ${{ secrets.THIRD_PARTY_URL }}
          AIR_QUALITY_API_URL: ${{ secrets.AIR_QUALITY_API_URL }}
          FORECAST_API_URL: ${{ secrets.FORECAST_API_URL }}
          GEOKEY_USER: ${{ secrets.GEOKEY_USER }}
          GEOSEARCH_API_URL: ${{ secrets.GEOSEARCH_API_URL }}
          GEONEAR_API_URL: ${{ secrets.GEONEAR_API_URL }}
        run: | 
          docker run --rm \
          -e PYTHONUNBUFFERED=1 \
          -e THIRD_PARTY_API_KEY=$THIRD_PARTY_API_KEY \
          -e THIRD_PARTY_URL=$THIRD_PARTY_URL \
          -e AIR_QUALITY_API_URL=$AIR_QUALITY_API_URL \
          -e FORECAST_API_URL=$FORECAST_API_URL \
          -e GEOKEY_USER=$GEOKEY_USER \
          -e GEOSEARCH_API_URL=$GEOSEARCH_API_URL \
          -e GEONEAR_API_URL=$GEONEAR_API_URL \
          -v ${{ github.workspace }}/my-python-project:/app main-app
        continue-on-error: true
      
      - name: Capture exit code
        run: echo "exit_code=$?" >> $GITHUB_ENV

      - name: Warn on controlled error
        if: env.exit_code == '0'
        run: echo "::warning ::Low data!"
             exit 0

      - name: Fail on unexpected error
        if: env.exit_code == '1'
        run: |
          echo "::error ::Unexpected script error (code 1)"
          exit 1
      
      - name: Commit and push DB
        env:
          GH_PAT_SUNSET: ${{ secrets.GH_PAT_SUNSET }}
        run: |
          cd my-python-project/src/data/
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          # Ensure we are on a branch (e.g., 'main')
          git checkout main || git checkout -b main
          git remote set-url origin https://x-access-token:${GH_PAT_SUNSET}@github.com/iampedrovieira/sunset-data-folder.git
          # Pull the latest changes from the remote branch
          #git pull origin main --rebase
          git add .
          git commit -m "Data extraction $(date)"
          #Push changes to the branch
          git push origin main
          cd ../../../
          #Sync submodule configuration
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git submodule sync
          git add .gitmodules my-python-project/src/data
          git commit -m "Sync submodule configuration to track main branch"
          git push origin main
