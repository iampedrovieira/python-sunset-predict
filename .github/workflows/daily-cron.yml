name: Daily Python Script

on:
  push:  # Trigger the workflow on push to the repository
    branches:
      - main  # Specify the branch to watch (e.g., 'main')

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t main-app -f Dockerfile-action .
      
      - name: Debug workspace
        run: ls -R ${{ github.workspace }}

      - name: List Docker images
        run: docker images
        
      - name: Run script
        env:
          THIRD_PARTY_API_KEY: ${{ secrets.THIRD_PARTY_API_KEY }}
          THIRD_PARTY_URL: ${{ secrets.THIRD_PARTY_URL }}
          AIR_QUALITY_API_URL: ${{ secrets.AIR_QUALITY_API_URL }}
          FORECAST_API_URL: ${{ secrets.FORECAST_API_URL }}
          GEOKEY_USER: ${{ secrets.GEOKEY_USER }}
          GEOSEARCH_API_URL: ${{ secrets.GEOSEARCH_API_URL }}
          GEONEAR_API_URL: ${{ secrets.GEONEAR_API_URL }}
        run: docker run --rm \
          -e THIRD_PARTY_API_KEY=$THIRD_PARTY_API_KEY \
          -e THIRD_PARTY_URL=$THIRD_PARTY_URL \
          -e AIR_QUALITY_API_URL=$AIR_QUALITY_API_URL \
          -e FORECAST_API_URL=$FORECAST_API_URL \
          -e GEOKEY_USER=$GEOKEY_USER \
          -e GEOSEARCH_API_URL=$GEOSEARCH_API_URL \
          -e GEONEAR_API_URL=$GEONEAR_API_URL \
          -v ${{ github.workspace }}/my-python-project:/app main-app
         echo "exit_code=$?" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Warn on controlled error
        if: steps.run_script.outputs.exit_code == '2'
        run: echo "::warning ::Low data!"

      - name: Fail on unexpected error
        if: steps.run_script.outputs.exit_code == '1'
        run: |
          echo "::error ::Unexpected script error (code 1)"
          exit 1